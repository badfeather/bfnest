// .blocks-gallery-grid,
.wp-block-gallery {
	// @include gallery-row;
	margin-bottom: var(--#{$prefix}spacing--l);
	padding-top: var(--#{$prefix}spacing--s);
}

// .blocks-gallery-item,
.wp-block-gallery .wp-block-image {
	// @include gallery-col;
	margin-bottom: $gallery-grid-gutter-width;

	figure {
		margin: 0;
	}

	img {
		display: block;
	}
}

.columns-default .wp-block-image {
	@include cols(4);
}

// @include generate-block-grid-classes(6, '.blocks-gallery-grid', '.columns', '.blocks-gallery-item', $gallery-grid-gutter-width);

@include generate-block-grid-classes(6, '.wp-block-gallery', '.columns', '.wp-block-image', $gallery-grid-gutter-width);

.is-cropped {
	.wp-block-image {
		// display: flex;
		// flex-direction: column;
		position: relative;

		a,
		img {
			width: 100%;
			max-height: 100%;
			aspect-ratio: 1;
			// flex: 1;
			object-fit: cover;
		}

		figcaption {
			opacity: 0;
			position: absolute;
			bottom: 0;
			left: $gallery-grid-gutter-width * .5;
			width: calc(100% - $gallery-grid-gutter-width);
			background-color: rgba(0,0,0,.5);
			color: $white;
			padding: .5em;
			transition: opacity .3s;
		}

		&:hover,
		&:focus {
			figcaption {
				opacity: 1;
			}
		}
	}
}

// Cropped
// .is-cropped .blocks-gallery-item {
// 	a,
// 	img {
// 		// IE11 doesn't support object-fit, so just make sure images aren't skewed.
// 		// The following rules are for all browsers.
// 		width: 100%;
//
// 		// IE11 doesn't read rules inside this query. They are applied only to modern browsers.
// 		@supports (position: sticky) {
// 			height: 100%;
// 			flex: 1;
// 			object-fit: cover;
// 		}
// 	}
//
// 	// adding here
// 	figure {
// 		height: 100%;
// 		display: flex;
// 		align-items: flex-end;
// 		justify-content: flex-start;
// 		position: relative;
// 	}
//
// 	figcaption {
// 		position: absolute;
// 		bottom: 0;
// 		width: 100%;
// 		max-height: 100%;
// 		overflow: auto;
// 		padding: 40px 10px 9px;
// 		color: $white;
// 		// text-align: center;
// 		// font-size: $default-font-size;
// 		background: linear-gradient(0deg, rgba($color: $black, $alpha: 0.7) 0, rgba($color: $black, $alpha: 0.3) 70%, transparent);
// 	}
// }

// DEFAULTS
//	// On mobile and responsive viewports, we allow only 1 or 2 columns at the most.
//	& .blocks-gallery-image,
//	& .blocks-gallery-item {
//		width: calc((100% - #{ $grid-unit-20 }) / 2);
//
//		&:nth-of-type(even) {
//			margin-right: 0;
//		}
//	}
//
//	&.columns-1 .blocks-gallery-image,
//	&.columns-1 .blocks-gallery-item {
//		width: 100%;
//		margin-right: 0;
//	}
//
//	// Beyond mobile viewports, we allow up to 8 columns.
//	@include break-small {
//		@for $i from 3 through 8 {
//			&.columns-#{ $i } .blocks-gallery-image,
//			&.columns-#{ $i } .blocks-gallery-item {
//				width: calc((100% - #{ $grid-unit-20 } * #{ $i - 1 }) / #{ $i });
//				margin-right: 16px;
//
//				// Rules inside this query are only run by Microsoft Edge.
//				// Edge miscalculates `calc`, so we have to add some buffer.
//				// See also https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/15637241/
//				@supports (-ms-ime-align:auto) {
//					width: calc((100% - #{ $grid-unit-20 } * #{ $i - 1 }) / #{ $i } - 1px);
//				}
//			}
//		}
//
//		// Unset the right margin on every rightmost gallery item to ensure center balance.
//		@for $column-count from 1 through 8 {
//			&.columns-#{ $column-count } .blocks-gallery-image:nth-of-type(#{ $column-count }n),
//			&.columns-#{ $column-count } .blocks-gallery-item:nth-of-type(#{ $column-count }n) {
//				margin-right: 0;
//			}
//		}
//	}
//
//	// Last item always needs margins reset.
//	.blocks-gallery-image:last-child,
//	.blocks-gallery-item:last-child {
//		margin-right: 0;
//	}
//
//	// Apply max-width to floated items that have no intrinsic width.
//	&.alignleft,
//	&.alignright {
//		max-width: $content-width / 2;
//		width: 100%;
//	}
//
//	// If the gallery is centered, center the content inside as well.
//	&.aligncenter {
//		.blocks-gallery-item figure {
//			justify-content: center;
//		}
//	}
//}
