@mixin style($property, $value: 0) {
	#{$property}: $value;
}

@mixin style-change($property, $value, $default) {
	@if $value != $default {
		#{$property}: $value;
	}
}

@mixin style-change-unitcalc($property, $value: 0, $default: 0, $font-size: $body__font-size, $unit: $base__unit) {
	@if $value != $default {
		#{$property}: unitcalc($value, $font-size, $unit);
	}
}

// expects maps of 'property': 'value' pairs
@mixin map-diff-styles($map, $defaults) {
	$merged: map.merge($defaults, $map);

	// remove any keys from $merged that have values identical to those in $defaults
	@each $property, $value in $merged {
		@if map.get($defaults, $property) == $value {
			$merged: map.remove($merged, $property);
		}
	}

	// dive through nested selectors
	@each $property, $value in $merged {
		#{$property}: $value;
	}
}

// breakpoint change
@mixin bp-up-style-change($property, $value, $default, $bp) {
	@if $value != $default {
		@media (min-width: $bp) {
			#{$property}: $value;
		}
	}
}

// shorthand rules
@mixin style-shorthand($property, $value-top: 0, $value-right: $value-top, $value-bottom: $value-top, $value-left: $value-right) {
	@if $value-left != $value-right {
		#{$property}: $value-top $value-right $value-bottom $value-left;

	} @else if $value-top != $value-bottom {
		#{$property}: $value-top $value-right $value-bottom;

	} @else if $value-top != $value-right {
		#{$property}: $value-top $value-right;

	} @else {
		#{$property}: $value-top;
	}
}

@mixin style-shorthand-unitcalc($property, $value-top: 0, $value-right: $value-top, $value-bottom: $value-top, $value-left: $value-right, $font-size: $body__font-size, $unit: $base__unit) {

	@if $value-left != $value-right {
		#{$property}: unitcalc($value-top, $font-size, $unit) unitcalc($value-right, $font-size, $unit) unitcalc($value-bottom, $font-size, $unit) unitcalc($value-left, $font-size, $unit);

	} @else if $value-top != $value-bottom {
		#{$property}: unitcalc($value-top, $font-size, $unit) unitcalc($value-right, $font-size, $unit) unitcalc($value-bottom, $font-size, $unit);

	} @else if $value-top != $value-right {
		#{$property}: unitcalc($value-top, $font-size, $unit) unitcalc($value-right, $font-size, $unit);

	} @else {
		#{$property}: unitcalc($value-top, $font-size, $unit);
	}
}

@mixin style-change-shorthand($property, $default-top: 0, $default-right: $default-top, $default-bottom: $default-top, $default-left: $default-right, $value-top: $default-top, $value-right: $default-right, $value-bottom: $value-top, $value-left: $value-right) {
	@if ($value-top != $default-top or $value-right != $default-right or $value-bottom != $default-bottom or $value-left != $default-left) {
		@include style-shorthand($property, $value-top, $value-right, $value-bottom, $value-left);
	}
}

@mixin style-change-shorthand-unitcalc($property, $default-top: 0, $default-right: $default-top, $default-bottom: $default-top, $default-left: $default-right, $value-top: $default-top, $value-right: $default-right, $value-bottom: $value-top, $value-left: $value-right, $font-size: $body__font-size, $unit: $base__unit) {
	@if ($value-top != $default-top or $value-right != $default-right or $value-bottom != $default-bottom or $value-left != $default-left) {
		@include style-shorthand-unitcalc($property, $value-top, $value-right, $value-bottom, $value-left, $font-size, $unit);
	}
}

// legacy
@mixin style-emcalc($property, $value: 0, $font-size: $body__font-size) {
	@include style-unitcalc($property, $value, $font-size, 'em');
}

@mixin style-shorthand-emcalc($property, $value-top: 0, $value-right: $value-top, $value-bottom: $value-top, $value-left: $value-top, $font-size: $body__font-size) {
	@include style-shorthand-unitcalc($property, $value-top, $value-right, $value-bottom, $value-left, $font-size, 'em');
}

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}

	&:after {
		clear: both;
	}
}

// Hide text completely
@mixin text-hide() {
	font: "0/0" a;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}

@mixin sr-only() {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	padding: 0;
	overflow: hidden;
	clip: rect(0 0 0 0);
	border: 0;
}

// or, if we have problems with that
@mixin ir() {
	text-indent: 100%;
	overflow: hidden;
	white-space: nowrap;
}

// Webkit-style focus
@mixin tab-focus() {
	// Default
	outline: thin dotted #333;
	// Webkit
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}

// CSS3 Content Columns
@mixin content-columns($column-count, $column-gap: $grid__gutter-width) {
	column-count: $column-count;
	column-gap: $column-gap;
}
